My Python notes

    Python functions
        Python functions accept parentheses and accept one or more argument.
        Examples of functions in Python:
            print('Hello, world!')  => outputs the argument provided.
            len('hi, have a lovely day!') => output total length of string.
            type(2021) => output argument data type.

    Python Methods.
        Methods actually are functions that are called using dot notation.
        Methods are specific to the data type for a particular variable. So there
        are some built-in methods that are available for all strings, different
        methods that are available for all integers, etc.

        Example of String methods:
            .lower() => 'John Smith.lower()' >>> john smith
            .title() => 'john smith.title()' >>> John Smith


        Methods accepts the string itself as the first argument of the method. However, they
        also could receive additional arguments, that are passed inside the parentheses.
        Let's look at the output for a few examples.

            my_string = 'sebastian thrun'
            >>> my_string.islower()
            True
            >>> my_string.count('a')
            2
            >>> my_string.find('a')
            3
        You can see that the count and find methods both take another argument. However, the .islower()
        method does not accept another argument.


    Data Structures in Python

    Data Structure	Ordered	Mutable	Constructor	    Example
    List	        Yes	    Yes	    [ ] or list()	[5.7, 4, 'yes', 5.7]
    Tuple	        Yes	    No	    ( ) or tuple()	(5.7, 4, 'yes', 5.7)
    Set	            No	    Yes	    {}* or set()	{5.7, 4, 'yes'}
    Dictionary	    No	    No**	{ } or dict()	{'Jun': 75, 'Jul': 89}

    * You can use curly braces to define a set like this: {1, 2, 3}. However, if you leave the curly braces
    empty like this: {} Python will instead create an empty dictionary. So to create an empty set, use set().

    ** A dictionary itself is mutable, but each of its individual keys must be immutable.